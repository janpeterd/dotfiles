
# ========================================================================

# Execs


exec-once = ~/.config/.autostart
exec-once = lxpolkit
exec-once = echo us > /tmp/kb_layout
exec-once = waybar -c ~/.config/waybar/config-hypr.jsonc
exec-once = hyprpaper
exec-once = hyprctl setcursor HyprBibataModernClassicSVG 18
exec-once = kanshi
exec-once = emacs --fg-daemon &
exec-once = nm-applet --indicator &
exec-once = blueman-applet &
exec-once = udiskie -s &
# exec-once = trayscale --hide-window --wait &
# exec-once = kdeconnectd &
# exec-once = kdeconnect-indicator &
# exec-once = otd-daemon & # open tablet driver
exec-once = copyq --start-server
exec-once = mpd &

# ENV variables

env = EDITOR, nvim
env = VISUAL, nvim
env = TERMINAL, kitty
env = BROWSER, chromium
env = MANPAGER, nvim +Man!
env = MANWIDTH, 999
env = MANROFFOPT, -c

env = ELECTRON_OZONE_PLATFORM_HINT, wayland

# ========================================================================


# Window rules (external)
source = $HOME/.config/hypr/windowrules.conf
source = $HOME/.config/hypr/workspacerules.conf


# Variables

$TERMINAL = kitty # idk why I need to define it twice, something goes wrong with this
$FILEMANAGER = yazi
# $FILEMANAGER = lf
$GUIFILEMANAGER = nemo
$BROWSER = firefox

# Plugins


# Floating mode (with bars)
bind = SUPER SHIFT, b, workspaceopt, allfloat

# Back to Tiling mode
bind = SUPER CTRL, b, workspaceopt, allfloat

plugin {
    hyprbars {
        bar_color = rgba(40393AFF)
        bar_text_align = center
        bar_text_font = Iosevka Aile
        bar_text_size = 8
        bar_padding = 12
        bar_button_padding = 10
        bar_precedence_over_border = true
        bar_height = 25
        hyprbars-button = rgb(ff4040), 15,, hyprctl dispatch killactive
        hyprbars-button = rgb(eeee11), 15,, hyprctl dispatch fullscreen 1
    }
    hyprexpo {
        columns = 3
        gap_size = 5
        bg_col = rgb(111111)
        workspace_method = first m~1

        enable_gesture = true
        gesture_distance = 300
        gesture_positive = true
    }
    hycov {
        enable_hotarea = 0
        enable_alt_release_exit = 1
        alt_toggle_auto_next = 0 # auto focus next window when enter overview in alt mode
    }
}

# ========================================================================

# Monitors, handled by kanshi, mirror by default


monitor = ,preferred,auto,1

# source = $HOME/.config/hypr/mirror.conf
# ========================================================================

# Workspaces -> monitors




workspace = s[true], gapsout:120, gapsin:10
# ========================================================================

# Config options


input {
    # kb_options = caps:escape  # caps to escape
    kb_options = ctrl:nocaps  # caps to control
    kb_layout=us,be
    repeat_rate = 55
    repeat_delay = 150
    numlock_by_default = true
    scroll_factor = 2.5 
    touchpad {
        natural_scroll = true
        scroll_factor = 0.1
    }
}

xwayland {
  force_zero_scaling = true
}

binds {
    allow_workspace_cycles=true
}

# General settings
general {
    # Use to mouse to resize when draggin border
    resize_on_border=true
    extend_border_grab_area = 3
    # Don't change cursor when hovering over border
    hover_icon_on_border=false
    # Gaps
    # gaps_in=5
    # gaps_out=8
    # No outer gaps by default
    gaps_in=5
    gaps_out=5
    # Borders
    # Border thickness
    border_size=3
    # Border color
    # col.active_border = rgba(b0b63775) rgba(83a59875) rgba(fe801975) rgba(fabd2f75) rgba(b0b63775) rgba(83a59875) rgba(fe801975) rgba(fabd2f75)
    col.active_border = rgba(80A0FFFF)

    # col.active_border = rgba(ff0000ff) rgba(ffff00ff) rgba(00ff00ff) rgba(00ffffff) rgba(0000ffff) rgba(ff00ffff)
    col.inactive_border = rgba(504945ff)

    # Default layout
    layout = master
    # layout = dwindle
    # layout = hy3

}

cursor {
    persistent_warps=true
    enable_hyprcursor = true
    # Hide cursor after timeout
    inactive_timeout = 25
    zoom_rigid = true
}

group {
    # col.border_active = rgba(ff0000ff) rgba(ffff00ff) rgba(00ff00ff) rgba(00ffffff) rgba(0000ffff) rgba(ff00ffff)
    col.border_active = rgba(80a0ffff)
    groupbar {
        gradients = false
        font_family = Roboto Condensed
        render_titles = true
        font_size = 9
        height = 14
        stacked = false
        col.active = rgba(e65e72ff)
        col.inactive = rgba(353946ff)
    }
}


misc {
    force_default_wallpaper=0
    font_family = Robot Condensed
    mouse_move_enables_dpms = true
    vfr = true
    initial_workspace_tracking = 0
    enable_swallow = false
    swallow_regex = ^(kitty)$
    new_window_takes_over_fullscreen = 2 # unfullscreen current window
}


# Window decorations
decoration {
    rounding = 7
    active_opacity = 1.0
    inactive_opacity = 1.0
    blur {
      enabled = false
    }
    blurls = gtk-layer-shell
    blurls = lockscreen
    rounding = 6

    # screen_shader = /home/jp/.config/hypr/shaders/blue-light-filter-brightness.glsl
    # screen_shader = /home/jp/.config/hypr/shaders/brightness.frag
    # screen_shader = /home/jp/.config/hypr/shaders/invert_colors.glsl
    # screen_shader = /home/jp/.config/hypr/shaders/crt.frag

    blur {
        enabled = true
        popups = true
        size = 4
        passes = 4
        new_optimizations = true
        special = false
    }
    shadow {
      enabled = false
      range = 300
      render_power = 4
      color = rgba(1a1a1aaf)
      offset = 0 40
      scale = 0.9
      # ignore_window = true
    }

}

debug {
    disable_logs = false
}

# Animation
animations {
    enabled = true
    bezier = fluent_decel, 0, 0.2, 0.4, 1
    bezier = easeOutCirc, 0, 0.55, 0.45, 1
    bezier = easeOutCubic, 0.33, 1, 0.68, 1
    bezier = easeinoutsine, 0.37, 0, 0.63, 1
    # Windows
    # animation = windowsIn, 1, 1, easeOutCubic, slide 30% # window open
    animation = windowsIn, 1, 3, default, slide bottom
    animation = windowsOut, 1, 1, fluent_decel, popin 70% # window close.
    animation = windowsMove, 1, 2, easeinoutsine, slide # everything in between, moving, dragging, resizing.
    # Fade
    animation = fadeIn, 1, 3, easeOutCubic  # fade in (open) -> layers and windows
    animation = fadeOut, 1, 1.7, easeOutCubic # fade out (close) -> layers and windows
    animation = fadeSwitch, 0, 1, easeOutCirc # fade on changing activewindow and its opacity
    animation = fadeShadow, 1, 10, easeOutCirc # fade on changing activewindow for shadows
    animation = fadeDim, 1, 4, fluent_decel # the easing of the dimming of inactive windows
    animation = border, 1, 2.7, easeOutCirc # for animating the border's color switch speed
    animation = borderangle, 1, 30, fluent_decel, once # for animating the border's gradient angle - styles: once (default), loop
    animation = workspaces, 1, 3, easeOutCubic, fade # styles: slide, slidevert, fade, slidefade, slidefadevert
}


# Dwindle layout settings
dwindle {
    pseudotile = true
    preserve_split = true
    force_split = 1 # new window = top or left
}

# Master layout settings
master {
    allow_small_split = true
    new_status = master
    new_on_top = true
    orientation = left
    mfact = 0.55
    inherit_fullscreen = true
    drop_at_cursor = true
    # special_scale_factor = 0.8
}

# Trackpad gestures
gestures {
   workspace_swipe = true
   workspace_swipe_forever = false
    workspace_swipe = true
    workspace_swipe_forever = true
}

# ========================================================================

# Layerrules

layerrule = blur, waybar
layerrule = noanim, rofi
layerrule = blur, swaync-control-center
layerrule = blur, swaync-notification-window
layerrule = ignorezero, swaync-control-center
layerrule = ignorezero, swaync-notification-window

layerrule = ignorealpha 0.5, swaync-control-center
layerrule = ignorealpha 0.5, swaync-notification-window

# BINDINGS


# Colorpicker (to clipboard)
bind = SUPER, V, exec, hyprpicker -a -n              # hex
bind = SUPER SHIFT, V, exec, hyprpicker -a -n -f rgb # rgb
bind = SUPER CTRL, V, exec, hyprpicker -a -n -f hsl  # hsl

bind  = SUPER, X, submap, commands
submap = commands
bind = SUPER, k, exec, ~/Code/scripts/bin/rofi-kitty-session
bind = SUPER, k, submap, reset
bind = SUPER, t, exec, ~/Code/scripts/bin/rofi-tmux-session
bind = SUPER, t, submap, reset
bind = SUPER, p, exec, ~/Code/scripts/bin/rofi-projects
bind = SUPER, p, submap, reset
bind = SUPER, d, exec, ~/Code/scripts/bin/rofi-dirs
bind = SUPER, d, submap, reset
bind = SUPER, f, exec, ~/Code/scripts/bin/rofi-files
bind = SUPER, f, submap, reset

bind = ,escape, submap, reset
submap = reset

# System actions (logout, shutdown, ...)
bind = SUPER, Backspace, exec, wlogout --protocol layer-shell -b 4 -T 400 -B 400
bind = SUPER CTRL, Backspace, exec, hyprlock

bind = SUPER, Return, exec, $TERMINAL
bind = SUPER SHIFT, Return, exec, $TERMINAL -e tmux new-session -A


# Web Browser
bind = SUPER, W, exec, google-chrome-stable --ozone-platform=wayland

# 2nd Web Browser
bind = SUPER SHIFT, W, exec, firefox

# System monitor
bind = SUPER CTRL, W, exec, $TERMINAL -e btop

bind = SUPER, E, exec, $TERMINAL -e $FILEMANAGER
bind = SUPER CTRL, E, exec, $TERMINAL -e lf
bind = SUPER SHIFT, E, exec, $GUIFILEMANAGER # 2nd File manager

# bind = SUPER, N, exec, kitty -e nvim
bind = SUPER, N, exec, $TERMINAL -e nvim

# FUNCTION KEYS
bind = SUPER, F1, exec, $TERMINAL --title=pulsemixer -e pulsemixer
bind = SUPER, F2, exec, pavucontrol
bind = SUPER, F3, exec, swaync-client -t
bind = SUPER, F4, exec, $TERMINAL --title=python -e python3
bind = SUPER, F5, exec, $TERMINAL --title=calculator -e bc -lq
# toggle animations
bind = SUPER, F11, exec, if [[ $(hyprctl getoption animations:enabled | grep "int" | cut -d' ' -f2) == '0' ]]; then hyprctl keyword animations:enabled 1; else hyprctl keyword animations:enabled 0; fi

bind = SUPER, A, exec, emacsclient -c -a emacs --eval "(progn (org-agenda-list) (delete-other-windows) (setq system-time-locale \"C\"))"
bind = SUPER SHIFT, A, exec, emacsclient -c -a emacs --eval "(progn (org-agenda nil \"t\") (delete-other-windows) (setq system-time-locale \"C\"))"
bind = SUPER, D, exec, rofi -show drun

bind = SUPER SHIFT, D, exec, [workspace special] keepassxc

bind = SUPER, slash, exec, rofimoji -a copy

# multi monitor stuff
bind = SUPER, period, focusmonitor, r
bind = SUPER SHIFT, period, movewindow, mon:r
bind = SUPER CTRL, period, movecurrentworkspacetomonitor, r

bind = SUPER, comma, focusmonitor, l
bind = SUPER SHIFT, comma, movewindow, mon:l
bind = SUPER CTRL, comma, movecurrentworkspacetomonitor, l

# MAGNIFYING glass script
bind = SUPER, z, exec, ~/.config/hypr/scripts/zoom

# Audio
binde = SUPER, XF86AudioRaiseVolume, workspace, e+1
binde = SUPER, XF86AudioLowerVolume, workspace, e-1
binde = , XF86AudioRaiseVolume, exec, pamixer -i 5 && ~/.config/hypr/scripts/volume
binde = , XF86AudioLowerVolume, exec, pamixer -d 5 && ~/.config/hypr/scripts/volume
bind = , XF86AudioMute, exec, pamixer -t && ~/.config/hypr/scripts/volume
bind = , XF86AudioPlay, exec, playerctl play-pause
bind = , XF86AudioNext, exec, playerctl next
bind = , XF86AudioPrevious, exec, playerctl previous

binde = SUPER, equal, exec, pamixer -i 5 && ~/.config/hypr/scripts/volume
binde = SUPER, minus, exec, pamixer -d 5 && ~/.config/hypr/scripts/volume

# gaps
binde = SUPER SHIFT, equal, exec, ~/.config/hypr/scripts/gaps inc
binde = SUPER SHIFT, minus, exec, ~/.config/hypr/scripts/gaps dec
binde = SUPER ALT, equal, exec, ~/.config/hypr/scripts/gaps inc inner
binde = SUPER ALT, minus, exec, ~/.config/hypr/scripts/gaps dec inner
binde = SUPER CTRL, equal, exec, ~/.config/hypr/scripts/gaps inc outer
binde = SUPER CTRL, minus, exec, ~/.config/hypr/scripts/gaps dec outer
bind = SUPER CTRL, 0, exec, ~/.config/hypr/scripts/gaps toggle
bind = SUPER SHIFT, 0, exec, hyprctl reload

# Switch keyboard layout
bind = SUPER SHIFT, Backspace, exec, hyprctl switchxkblayout current next; if [[ $(cat /tmp/kb_layout) == 'us' ]]; then echo 'be' > /tmp/kb_layout; notify-send 'Keyboard layout changed to be!'; else echo "us" > /tmp/kb_layout; notify-send 'Keyboard layout changed to us!'; fi

binde = , XF86MonBrightnessUp, exec, brightnessctl s +5             # Brightness
binde = , XF86MonBrightnessDown, exec, brightnessctl s 5-           # Brightness
bind = , XF86Calculator, exec, $TERMINAL --title=calculator -e bc -lq     # Calculator button


bind = SUPER SHIFT, P, exec, pauseallmpv                            # Pause media
bind = SUPER CTRL, P, exec, playerctl play-pause

bind = SUPER, y, layoutmsg, addmaster
bind = SUPER SHIFT, y, layoutmsg, removemaster


# media submap
bind  = SUPER, m, submap, media
submap = media
bind = SUPER, s, exec, com.spotify.Client   # spotify
bind = SUPER, s, submap, reset
bind = SUPER, m, exec, $TERMINAL -e ncmpcpp     # mpd
bind = SUPER, m, submap, reset
bind = SUPER, r, exec, ~/Code/scripts/bin/radio_menu.sh   # radio
bind = SUPER, r, submap, reset
bind = SUPER, n, exec, $TERMINAL -e newsboat
bind = SUPER, n, submap, reset
bind = ,escape, submap, reset
submap = reset


# MONITORS (only optimised for 1 monitors)

# GROUPS


# Create/destroy a windowgroup
bind = SUPER, G, togglegroup
# Move a window into a group, group must be on the left of window
bind = SUPER SHIFT, G, moveintogroup, l
# Move active window out of the group it is in
bind = SUPER CTRL, G, moveoutofgroup
# Cycle between windows inside group
bind = SUPER, bracketright, changegroupactive, n
bind = SUPER, bracketleft, changegroupactive, b
bind = SUPER SHIFT, bracketleft, movegroupwindow, b
bind = SUPER SHIFT, bracketright, movegroupwindow, f

# SCREENSHOTS

bind = SUPER SHIFT, S, exec, screenshot.sh region
bind = , Print, exec, screenshot.sh all
bind = SHIFT, Print, exec, screenshot.sh screen

# OCR
bind = SUPER CTRL, S, exec, grim -t png -g "$(slurp)" - | tesseract stdin stdout -l "eng+nl" | tr -d '\f' | wl-copy
# bind = SUPER CTRL, S, exec, grim -t png -g "$(slurp)" - | tesseract stdin stdout -l "fra" | tr -d '\f' | wl-copy
bind = SUPER ALT, S, exec, grim -g "$(slurp)" - | swappy -f -

bind = SUPER, Q, killactive,
bind = ALT, F4, exec, hyprctl kill

# bind = SUPER SHIFT, Q, exit,

# FULLSCREEN
bind = SUPER SHIFT, F, fullscreen, 0
bind = SUPER, F, fullscreen, 1
bind = SUPER CTRL, F, fullscreenstate, 0, 3


# Make current win master
bind = SUPER, space, layoutmsg, swapwithmaster master
bind = SUPER, space, layoutmsg, focusmaster master
# bind =  SUPER, space, layoutmsg, togglesplit

# Toggle floating behavior
bind = SUPER SHIFT, space, togglefloating,

# Pin a *floating* window
bind = SUPER, S, pin

# Vim bindings for window focus
bind = SUPER, H, movefocus, l
bind = SUPER, J, layoutmsg, cyclenext
bind = SUPER, K, layoutmsg, cycleprev
# bind = SUPER, J, movefocus, d
# bind = SUPER, K, movefocus, u
bind = SUPER, L, movefocus, r
# easily swap between focussing tiled and floating windows
bind = SUPER, u, cyclenext, floating
bind = SUPER SHIFT, u, cyclenext, tiled

# Arrow keys for window focus
bind = SUPER, up, alterzorder, top
bind = SUPER, down, alterzorder, bottom

# bind = SUPER, left, movefocus, l
# bind = SUPER, right, movefocus, r
# bind = SUPER, up, movefocus, u
# bind = SUPER, down, movefocus, d

#Vim bindings, for window movement
bind = SUPER SHIFT, H, movewindow, l
bind = SUPER SHIFT, L, movewindow, r
bind = SUPER SHIFT, K, movewindow, u
bind = SUPER SHIFT, J, movewindow, d

# Arrow keys also work for window movement
bind = SUPER SHIFT, left, movewindow, l
bind = SUPER SHIFT, right, movewindow, r
bind = SUPER SHIFT, down, movewindow, d

# Resize windows
binde = SUPER CTRL, H, resizeactive, -50 0
binde = SUPER CTRL, L, resizeactive, 50 0
binde = SUPER CTRL, K, resizeactive, 0 -50
binde = SUPER CTRL, J, resizeactive, 0 50

# Move (floating) window
binde = SUPER CTRL SHIFT, H, moveactive, -30 0
binde = SUPER CTRL SHIFT, L, moveactive, 30 0
binde = SUPER CTRL SHIFT, K, moveactive, 0 -20
binde = SUPER CTRL SHIFT, J, moveactive, 0 20


bind = SUPER, 1, workspace, 1
bind = SUPER, 2, workspace, 2
bind = SUPER, 3, workspace, 3
bind = SUPER, 4, workspace, 4
bind = SUPER, 5, workspace, 5
bind = SUPER, 6, workspace, 6
bind = SUPER, 7, workspace, 7
bind = SUPER, 8, workspace, 8
bind = SUPER, 9, workspace, 9

bind = SUPER, TAB, workspace, previous
# bind = SUPER, grave, hyprexpo:expo, toggle

bind = SUPER, C, centerwindow, 1
bind = SUPER SHIFT, C, exec, copyq toggle
bind = SUPER CTRL, C, splitratio, -0.1 # reset the split factor

# Toggle waybar
bind = SUPER, B, exec, killall -SIGUSR1 waybar

# Change master layout
bind = SUPER, t, layoutmsg, orientationleft
bind = SUPER SHIFT, t, layoutmsg, orientationright
bind = SUPER CTRL, t, layoutmsg, orientationnext
bind = SUPER SHIFT CTRL, t, layoutmsg, orientationprev

# Move workspaces
bind = SUPER SHIFT, 1, movetoworkspace, 1
bind = SUPER SHIFT, 2, movetoworkspace, 2
bind = SUPER SHIFT, 3, movetoworkspace, 3
bind = SUPER SHIFT, 4, movetoworkspace, 4
bind = SUPER SHIFT, 5, movetoworkspace, 5
bind = SUPER SHIFT, 6, movetoworkspace, 6
bind = SUPER SHIFT, 7, movetoworkspace, 7
bind = SUPER SHIFT, 8, movetoworkspace, 8
bind = SUPER SHIFT, 9, movetoworkspace, 9
# bind = SUPER SHIFT, 0, movetoworkspacesilent, special

# I have O and 0 both mapped to special workspace actions
bind = SUPER, r, togglespecialworkspace,
bind = SUPER SHIFT, r, movetoworkspace, special

bindm = SUPER, mouse:272, movewindow
bindm = SUPER, mouse:273, resizewindow

bind = SUPER CTRL, F12, exit


# ========================================================================

# vim: tabstop=4
