input {
  keyboard {
    xkb {
      layout "us,be"
      options "ctrl:nocaps"
    }
    numlock
    repeat-delay 200
    repeat-rate 45
  }

  touchpad {
    dwt
    tap
    natural-scroll
  }

  focus-follows-mouse max-scroll-amount="0%"
}

cursor {
  xcursor-theme "Bibata-Modern-Classic"
  xcursor-size 24
  hide-when-typing
}

output "DP-1" {
  mode "1920x1080@144.001"
  scale 1
  transform "normal"
  position x=0 y=0
}

output "DP-2" {
  mode "1920x1080@74.986"
  scale 1
  transform "normal"
  position x=1920 y=0
}

layout {
  gaps 8
  always-center-single-column

  center-focused-column "never"

  preset-column-widths {
    proportion 0.33333
    proportion 0.5
    proportion 0.66667

  }


  default-column-width { proportion 0.5; }

  focus-ring {
    width 3
    active-color "#7fc8ff"
    inactive-color "transparent"
  }

  border {
    off
    width 4
    active-color "#ffc87f"
    inactive-color "#505050"
  }

  shadow {
    softness 30
    spread 5
    offset x=0 y=5
    color "#0007"
  }
}
environment {
    XDG_SESSION_TYPE "wayland"
    XDG_CURRENT_DESKTOP "wlroots"
    XDG_SESSION_DESKTOP "niri"
    GDK_BACKEND "wayland,x11"
    QT_QPA_PLATFORM "wayland;xcb"
    SDL_VIDEODRIVER "wayland,x11"
    CLUTTER_BACKEND "wayland"
    GTK_IM_MODULE "ibus"
    QT_IM_MODULE  "ibus"
    GDK_IM_MODULE "ibus"
    XMODIFIERS "@im=ibus"
    GTK_USE_PORTAL "1"
    MOZ_ENABLE_WAYLAND "1"
    MOZ_WAYLAND_USE_VAAPI "1"
    ELECTRON_OZONE_PLATFORM_HINT "auto"
    BROWSER "firefox"
    EDITOR "nvim"
    VISUAL "nvim"
    MANPAGER "nvim +Man!"
}


spawn-at-startup "swaybg" "-i" "{{ or .wallpaper.path (joinPath .chezmoi.homeDir "Pictures" "wallpaper.png") }}"
spawn-at-startup "emacs" "--fg-daemon"
spawn-at-startup "kanshi"
spawn-at-startup "copyq" "--start-server"
spawn-at-startup "sh" "-c" "sleep 1 && lxpolkit"
spawn-at-startup "nm-applet" "--indicator"
spawn-at-startup "mpd"
spawn-at-startup "udiskie" "-s"
spawn-at-startup "sh" "-c" "sleep 1 && blueman-applet"

prefer-no-csd

screenshot-path "~/Pictures/Screenshots/Screenshot from %Y-%m-%d %H-%M-%S.png"

animations {
  slowdown 0.8
}



window-rule {
  match app-id=r#"^org\.wezfurlong\.wezterm$"#
  default-column-width {}
}

window-rule {
  match app-id="DBeaver"
  match title=""
  match is-floating=true

  open-focused false
  default-floating-position x=15 y=15 relative-to="bottom-right"
}

window-rule {
  match title="^(ripdrag)$"
  match title="^(file_progress)$"
  match title="^(confirm)$"
  match title="^(dialog)$"
  match title="^(download)$"
  match title="^(notification )$"
  match title="^(error)$"
  match title="^(splash)$"
  match title="^(nwg-look)$"
  match title="^(confirmreset)$"
  match title="^(Delete profile)$"
  match title="^File Operation Progress$"
  match title="^Confirm to replace files$"
  match title="^KDE Connect URL handler$"
  match title="^(Open File)(.*)$"
  match title="^(Select a File)(.*)$"
  match title="^(Choose wallpaper)(.*)$"
  match title="^(Open Folder)(.*)$"
  match title="^(Save As)(.*)$"
  match title="^(Library)(.*)$"
  match title="^(File Upload)(.*)$"
  match title="^(hyprland-share-picker)$"
  match title="^(.*)-Google$"
  match title="^(.*)System Update$"
  match app-id="^xdm-app$"
  match app-id="^org.qbittorrent.qBittorrent$"
  match app-id="^com.github.hluk.copyq$"
  match app-id=r#"^org\.keepassxc\.KeePassXC$"#
  match app-id=r#"firefox$"# title="^Picture-in-Picture$"

  open-floating true
}

window-rule {
    match app-id="^org.pulseaudio.pavucontrol$"
    open-floating true
    default-floating-position x=0 y=4 relative-to="top"
    default-window-height { proportion 0.6; }
    default-column-width { proportion 0.4; }
    open-focused true
}

window-rule {
  match app-id="steam" title=r#"^notificationtoasts_\d+_desktop$"#
  default-floating-position x=10 y=10 relative-to="bottom-right"
}

window-rule {
  match app-id=r#"^org\.keepassxc\.KeePassXC$"#
  match app-id=r#"^org\.gnome\.World\.Secrets$"#

  block-out-from "screen-capture"
}

window-rule {
    match is-urgent=true

    shadow {
        color "#7d0d2d70"
    }

    tab-indicator {
        active-color "#f38ba8"
        inactive-color "#7d0d2d"
    }
}

window-rule {
    match is-window-cast-target=true

    focus-ring {
        active-color "#f38ba8"
        inactive-color "#7d0d2d"
    }

    border {
        inactive-color "#7d0d2d"
    }

    shadow {
        color "#7d0d2d70"
    }

    tab-indicator {
        active-color "#f38ba8"
        inactive-color "#7d0d2d"
    }
}

window-rule {
  geometry-corner-radius 6
  clip-to-geometry true
}

binds {
  Mod+Shift+Slash { show-hotkey-overlay; }

  Mod+Return { spawn "kitty"; }
  Mod+E { spawn "kitty" "-e" "yazi"; }
  Mod+Shift+E { spawn "nautilus"; }
  Mod+N { spawn "kitty" "-e" "nvim"; }
  Mod+D { spawn "fuzzel"; }
  Mod+Shift+D { spawn "keepassxc"; }
  Mod+Alt+L { spawn "swaylock"; }
  Mod+W { spawn "chromium" "--ozone-platform=wayland" "--enable-blink-features=MiddleClickAutoscroll"; }
  Mod+Shift+W { spawn "firefox" ; }
  Mod+Control+W { spawn "kitty" "-e" "btop" ; }
  Mod+Control+d { spawn "kitty" "-e" "lazydocker" ; }
  Mod+Backspace { spawn "wlogout" "-b" "5" "-T" "400" "-B" "400"; }
  Mod+Shift+Backspace { switch-layout "next"; }
  Mod+B { spawn "killall" "-SIGUSR1" "waybar"; }
  Mod+P { spawn "~/Code/scripts/bin/niri-mirror.sh" ; }


  XF86AudioRaiseVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.05+"; }
  XF86AudioLowerVolume allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.05-"; }
  XF86AudioMute        allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SINK@" "toggle"; }
  XF86AudioMicMute     allow-when-locked=true { spawn "wpctl" "set-mute" "@DEFAULT_AUDIO_SOURCE@" "toggle"; }

  XF86MonBrightnessUp { spawn "brightnessctl" "s" "+10"; }
  XF86MonBrightnessDown { spawn "brightnessctl" "s" "10-"; }

  Mod+equal allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.05+"; }
  Mod+minus allow-when-locked=true { spawn "wpctl" "set-volume" "@DEFAULT_AUDIO_SINK@" "0.05-"; }

  Mod+A { spawn "emacsclient" "-c" "-a" "emacs" "--eval" "(progn (org-agenda-list) (delete-other-windows) (setq system-time-locale \"C\"))"; }
  Mod+Q { close-window; }

  Mod+Left  { focus-column-left; }
  Mod+Down  { focus-window-down; }
  Mod+Up    { focus-window-up; }
  Mod+Right { focus-column-right; }
  Mod+H     { focus-column-left; }
  Mod+L     { focus-column-right; }

  Mod+Shift+Left  { move-column-left; }
  Mod+Shift+Down  { move-window-down; }
  Mod+Ctrl+Right { move-column-right; }
  Mod+Shift+H     { move-column-left; }
  Mod+Shift+L     { move-column-right; }
  Mod+Space { swap-window-left; }

  Mod+J     { focus-window-or-workspace-down; }
  Mod+K     { focus-window-or-workspace-up; }
  Mod+Shift+J     { move-window-down-or-to-workspace-down; }
  Mod+Shift+K     { move-window-up-or-to-workspace-up; }

  Mod+Home { focus-column-first; }
  Mod+End  { focus-column-last; }
  Mod+Ctrl+Home { move-column-to-first; }
  Mod+Ctrl+End  { move-column-to-last; }

  Mod+Period    { focus-monitor-right; }
  Mod+Comma    { focus-monitor-left; }
  Mod+Shift+Period   { move-column-to-monitor-right; }
  Mod+Shift+Comma    { move-column-to-monitor-left; }

  Mod+Shift+Ctrl+Left  { move-column-to-monitor-left; }
  Mod+Shift+Ctrl+Down  { move-column-to-monitor-down; }
  Mod+Shift+Ctrl+Up    { move-column-to-monitor-up; }
  Mod+Shift+Ctrl+Right { move-column-to-monitor-right; }
  Mod+Shift+Ctrl+H     { move-column-to-monitor-left; }
  Mod+Shift+Ctrl+J     { move-column-to-monitor-down; }
  Mod+Shift+Ctrl+K     { move-column-to-monitor-up; }
  Mod+Shift+Ctrl+L     { move-column-to-monitor-right; }


  Mod+Ctrl+Shift+Comma  { move-workspace-to-monitor-left; }
  Mod+Ctrl+Shift+Period  { move-workspace-to-monitor-right; }

  Mod+Page_Down      { focus-workspace-down; }
  Mod+Page_Up        { focus-workspace-up; }
  Mod+U              { focus-workspace-down; }
  Mod+I              { focus-workspace-up; }
  Mod+Ctrl+Page_Down { move-column-to-workspace-down; }
  Mod+Ctrl+Page_Up   { move-column-to-workspace-up; }
  Mod+Ctrl+U         { move-column-to-workspace-down; }
  Mod+Ctrl+I         { move-column-to-workspace-up; }


  Mod+Shift+Page_Down { move-workspace-down; }
  Mod+Shift+Page_Up   { move-workspace-up; }
  Mod+Shift+U         { move-workspace-down; }
  Mod+Shift+I         { move-workspace-up; }

  Mod+WheelScrollDown      cooldown-ms=150 { focus-workspace-down; }
  Mod+WheelScrollUp        cooldown-ms=150 { focus-workspace-up; }
  Mod+Ctrl+WheelScrollDown cooldown-ms=150 { move-column-to-workspace-down; }
  Mod+Ctrl+WheelScrollUp   cooldown-ms=150 { move-column-to-workspace-up; }

  Mod+WheelScrollRight      { focus-column-right; }
  Mod+WheelScrollLeft       { focus-column-left; }
  Mod+Ctrl+WheelScrollRight { move-column-right; }
  Mod+Ctrl+WheelScrollLeft  { move-column-left; }

  Mod+Shift+WheelScrollDown      { focus-column-right; }
  Mod+Shift+WheelScrollUp        { focus-column-left; }
  Mod+Ctrl+Shift+WheelScrollDown { move-column-right; }
  Mod+Ctrl+Shift+WheelScrollUp   { move-column-left; }


  Mod+1 { focus-workspace 1; }
  Mod+2 { focus-workspace 2; }
  Mod+3 { focus-workspace 3; }
  Mod+4 { focus-workspace 4; }
  Mod+5 { focus-workspace 5; }
  Mod+6 { focus-workspace 6; }
  Mod+7 { focus-workspace 7; }
  Mod+8 { focus-workspace 8; }
  Mod+9 { focus-workspace 9; }
  Mod+0 { focus-workspace 0; }
  Mod+Shift+1 { move-column-to-workspace 1; }
  Mod+Shift+2 { move-column-to-workspace 2; }
  Mod+Shift+3 { move-column-to-workspace 3; }
  Mod+Shift+4 { move-column-to-workspace 4; }
  Mod+Shift+5 { move-column-to-workspace 5; }
  Mod+Shift+6 { move-column-to-workspace 6; }
  Mod+Shift+7 { move-column-to-workspace 7; }
  Mod+Shift+8 { move-column-to-workspace 8; }
  Mod+Shift+9 { move-column-to-workspace 9; }
  Mod+Shift+0 { move-column-to-workspace 0; }

  Mod+Tab { focus-workspace-previous; }
  Mod+Grave { toggle-overview; }

  Mod+BracketLeft  { consume-or-expel-window-left; }
  Mod+BracketRight { consume-or-expel-window-right; }

  Mod+Shift+BracketLeft  { consume-window-into-column; }
  Mod+Shift+BracketRight { expel-window-from-column; }

  Mod+R { switch-preset-column-width; }
  Mod+Shift+R { switch-preset-window-height; }
  Mod+Ctrl+R { reset-window-height; }
  Mod+F { maximize-column; }
  Mod+Shift+F { fullscreen-window; }
  Mod+Ctrl+F { toggle-windowed-fullscreen;  }

  Mod+V { expand-column-to-available-width; }


  Mod+C { center-column; }

  Mod+Shift+C { spawn "copyq" "toggle"; }
  Mod+Ctrl+C { spawn "pastel" "pick"; }

  Mod+Ctrl+L { set-column-width "+5%"; }
  Mod+Ctrl+H { set-column-width "-5%"; }
  Mod+Ctrl+J { set-window-height "+5%"; }
  Mod+Ctrl+K { set-window-height "-5%"; }

  Mod+Shift+Minus { set-window-height "-10%"; }
  Mod+Shift+Equal { set-window-height "+10%"; }

  Mod+Shift+Space       { toggle-window-floating; }
  Mod+Shift+V { switch-focus-between-floating-and-tiling; }

  Mod+G { toggle-column-tabbed-display; }


  Print { screenshot; }
  Mod+Shift+S { screenshot; }
  Ctrl+Print { screenshot-screen; }
  Alt+Print { screenshot-window; }
  Alt+Tab { focus-window-previous; }

  Mod+Escape allow-inhibiting=false { toggle-keyboard-shortcuts-inhibit; }
  Ctrl+Alt+Delete { quit; }
  Mod+Shift+P { power-off-monitors; }
}


switch-events {
  lid-close { spawn "systemctl" "suspend-then-hibernate" ; }
}

debug {
  wait-for-frame-completion-in-pipewire
}

// vim: ft=kdl
